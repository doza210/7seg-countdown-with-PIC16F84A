;====================================================================
; Main.asm file generated by New Project wizard
;
; Processor: PIC16F84A
; Compiler:  MPASM (Proteus)
;====================================================================

;====================================================================
; DEFINITIONS
;====================================================================

LIST P=16F84A, F=INHX8M 			; MCU is PIC16F84A, output is Intel Hex
INCLUDE<P16F84A.INC> 				; include this file to use register names instead of addresses
__CONFIG _CP_OFF & _WDT_ON & _XT_OSC 		; code protection off, Watchdog Timer on, XTAL osc used

;====================================================================
; VARIABLES
;====================================================================

COUNT EQU 0CH 					; assign COUNT to memory address 0CH

;====================================================================
; RESET and INTERRUPT VECTORS
;====================================================================

      ; Reset Vector
ORG 0 
GOTO INIT

;====================================================================
; CODE SEGMENT
;====================================================================

INIT						; initialize PIC
	BSF STATUS, RP0 			; set register bank to 1
	CLRF TRISB 				; clear register TRISB (bank 1)
	
	MOVLW 0DH 				; load literal value 0DH to Wreg
						; prescaler 1:64 assigned to Watchdog Timer (WDT)
	MOVWF OPTION_REG 			; move data in Wreg to register OPTION_REG 	
	BCF STATUS, RP0 			; set register bank to 0
	
;program start
START MOVLW 0C0H 				; load literal value 0C0H to Wreg (displays 0 in common anode 7seg)
	MOVWF PORTB 				; move data in Wreg to PORTB

PRESS  BTFSS PORTA, 0				; check if bit 0 at PORTA is 1, skip next instruction if 1
	GOTO PRESS				; jump to label PRESS

	MOVLW B'10010000'			; load literal value to Wreg that displays 9 in common anode 7seg
	MOVWF PORTB				; move data in Wreg to PORTB
	
	SLEEP					; go to standby mode
	MOVLW B'10000000'			; load literal value to Wreg that displays 8 in common anode 7seg
	MOVWF PORTB				; move data in Wreg to PORTB

	SLEEP					; go to standby mode
	MOVLW B'11111000'			; load literal value to Wreg that displays 7 in common anode 7seg
	MOVWF PORTB				; move data in Wreg to PORTB

	SLEEP					; go to standby mode
	MOVLW B'10000010'			; load literal value to Wreg that displays 6 in common anode 7seg
	MOVWF PORTB				; move data in Wreg to PORTB

	SLEEP					; go to standby mode
	MOVLW B'10010010'			; load literal value to Wreg that displays 5 in common anode 7seg
	MOVWF PORTB				; move data in Wreg to PORTB

	SLEEP					; go to standby mode
	MOVLW B'10011001'			; load literal value to Wreg that displays 4 in common anode 7seg
	MOVWF PORTB				; move data in Wreg to PORTB

	SLEEP					; go to standby mode
	MOVLW B'10110000'			; load literal value to Wreg that displays 3 in common anode 7seg
	MOVWF PORTB				; move data in Wreg to PORTB

	SLEEP					; go to standby mode
	MOVLW B'10100100'			; load literal value to Wreg that displays 2 in common anode 7seg
	MOVWF PORTB				; move data in Wreg to PORTB

	SLEEP					; go to standby mode
	MOVLW B'11111001'			; load literal value to Wreg that displays 1 in common anode 7seg
	MOVWF PORTB				; move data in Wreg to PORTB

GOTO PRESS					; jump to label PRESS

;====================================================================
      END
